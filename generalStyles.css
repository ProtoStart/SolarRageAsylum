/*The main style sheet for Solar Rage Asylum (SRA)
	To get started quickly, I pasted in the style sheet used in the ProtoStart staging area, then made a git commit with that, used the replace all function in notepad ++ to replace all the line endings with a comment saying "not altered for SRA" followed by a line ending (so that in effect I was inserting that comment at the end of every line), then I've gone through making any easy or obvious changes and removing stuff that probably won't be needed.
*/

/*Resets - to give us better cross-browser consistency, and give us a level starting point*/
html{ /* The outer tag of every page*/ 
	margin: 0px;
	padding:0px;
}
 
body{ /* Full display area */ 
    text-align: center; /* game content areas overrule this, handy for everything else */ 
    width: 100%; /* not altered for SRA */ 
	padding-top: 0px; /* not altered for SRA */ 
	padding-right: 0px; /* not altered for SRA */ 
	padding-bottom: 0px; /* not altered for SRA */ 
	padding-left: 0px; /* not altered for SRA */ 
	margin: 0px; /* not altered for SRA */ 
	background-color: #FFFFFF; /* White background set - just in case a browser has a different background colour */ 
}
body *{ /* Every element inside the body element */ 
    margin: 0px; /* not altered for SRA */ 
	padding-top: 2px; /* not altered for SRA */ 
	padding-bottom: 2px; /* not altered for SRA */ 
    font-size: 16pt; /* Default text size is 4pt larger than Phil would normally use, as game text probably does want to be a bit more in your face */ 
	font-family: Arial, Helvetica, sans-serif; /* We've not spent any time picking a font, this is just Phils default choice TODO: Improve the choice of font! There must be some cool sci-fi font that would work - probably something to do when I'm focusing on snazzing up how it looks*/
} 
 
input{ /* <input> elements - text boxes, radio buttons, form submit buttons (not including buttons that are <button> elements or other elements that have click/tap events) */ 
	box-sizing: border-box; /*Specifies how the visible height and width should be calculated with regard to padding - weirdly the default for inputs is different to most other UI. I could do this with a sweeping reset, but I'd rather just alter elements that I find unintuitive as and when I come across them*/ 
}

/*Main sections*/
#mainContent{
	padding-bottom: 30px; /*Part of the solution to overlapping with the fixed footer*/
}

#footer{
	position: fixed;
	bottom: 0px;
	left: 0px;
	right: 0px;
	padding-bottom: 2px;
	background-color: #DDDDDD; /*Opaque, slightly off white background - Opaque prevents text looking awkward over the top of stuff behind it, off white is only subtly different from the generic white so doesn't draw attention to it much, but also does give a visible separation if people are looking at that area*/
	z-index: 10; /* Puts it in front of anything with a smaller z-index - I've set it to 10 so that that should mean we won't have to change it for a while */
}

/* Smaller Sections */
.homePageTabs{
	margin-left: 10px;
	margin-right: 10px;
}

/* Div/span Backgrounds and borders*/
.yellowBG{
	background-color: yellow;
}


/* Text - h1, h2 - h6, p*/
h1{
	font-size: 80pt;
	color: #ff850a;
	text-shadow: #000 0px 0px 14px;
    -webkit-font-smoothing: antialiased;
}
h2{
	font-size: 44pt;
	
}

/* Text adjustment classes*/
.biggerText{ /* Potentially useful class for making text bigger */ 
	font-size: 105%; /* not altered for SRA */ 
}

.alignLeft{ /* Potentially useful class for aligning text to the left */ 
	text-align: left; 
} 

.xScroll{ /* Potentially useful class for areas that should scroll on the x axis when they overflow*/ 
    display: flex; /*Makes things on one line*/
	overflow-x: scroll; /*Scrollbar on the x axis*/
    overflow-y: hidden; /*No Scrollbar or overflow on the y axis*/
} 
.yScroll{ /* Potentially useful class for areas that should scroll on the y axis when they overflow*/ 
	overflow-x: hidden; /*Scrollbar on the x axis*/
    overflow-y: scroll; /*No Scrollbar or overflow on the y axis*/
}

.Selected{ /* Potentially useful class for options that have been selected */ 
	border-style: inset; /* Makes it look like it's been pressed in */ 
	/*background-color: #86af49; /* Sometimes it's good to change the bg colour of a selected option to stand out from the non selected, I've commented this out until we get round to choosing selection colours*/ 
}

/*Javascript can be used to apply .hidden and .showing as appropriate*/ 
.hidden { /* Potentially useful class for things that will be programmatically toggled between hidden and shown */ 
	display: none;
}
.showing { /* Potentially useful class for things that will be programmatically toggled between hidden and shown */ 
	display: block;  
}

/* MODAL - Causes an effect a bit like a big popup, so you don't lose sight of the previous view completely but your attention is focused on something new. For SRA this will be useful for options and menus that need focus while keeping the game showing behind it (even if the game is paused while you are in the menu)
To make the effect you have a div of class modal which is partially seethrough and displays over the content already on screen, and then you have another div in the middle of the screen that has what you wish to show with priority- Not used in SRA yet, though I think we'll probably use them, and they don't normally need much ajustment from standard code*/ 
.modal { /* not altered for SRA, but has been reviewed for common sense */ 
  display: none; /* Hidden by default, unhide via JS */
  position: fixed; /* Stay in place */
  z-index: 1; /* Sit on top of content with the default z-index*/ 
  padding: 0%; /* Make sure that padding on modal class elements won't alter the box location of modal-content class elements*/
  left: 0; /* Attaches it to the far left */ 
  top: 0; /* Attaches it to the very top */ 
  width: 100%; /* Full width */ 
  height: 100%; /* Full height */
  overflow: auto; /* Enable scroll if needed */ 
  background-color: rgb(0,0,0); /* Fallback color - pure black - overidden unless the browser doesn't support rgba background colours*/ 
  background-color: rgba(0,0,0,0.4); /* Black with slight opacity - will override the rgb version if possible since this is defined after */
} 

/* Modal Content */
.modal-content { /* not altered for SRA */ 
  background-color: #fefefe; /* not altered for SRA */ 
  margin-top: 5%; /* not altered for SRA */ 
  margin-left: 8%; /* not altered for SRA */ 
  margin-right: 8%; /* not altered for SRA */ 
  margin-bottom: 0%; /* not altered for SRA */ 

  padding: 0px; /* not altered for SRA */ 
  border: 1px solid #888; /* not altered for SRA */ 
  width: auto; /* not altered for SRA */ 
  height: 90%; /* not altered for SRA */ 
  vertical-align: middle; /* not altered for SRA */ 
}

/* Style an iFrame that fits in a modal*/
#myModalIFrame { /* not altered for SRA */ 
	height: 100%; /* not altered for SRA */ 
	margin: 0px; /* not altered for SRA */ 
	padding-top: 0px; /* not altered for SRA */ 
	padding-bottom: 0px; /* not altered for SRA */ 
	width: 94%; /*Allow room for scroll bar and padding, otherwise when it appears content overspills*/ /* not altered for SRA */ 
	border-width: 0px; /*Hide the default border around iFrames*/ /* not altered for SRA */ 
    border-style: none; /*Hide the default border around iFrames*/ /* not altered for SRA */ 
}

/* Close Button - often in modals*/ 
.close { /* not altered for SRA */ 
  margin: 3px; /* not altered for SRA */ 
  color: #aaaaaa; /* not altered for SRA */ 
  position: absolute; /*Prevents a situation at narrow widths where the close button plus the main part of the modal content becomes wider than the modal, causing the rest of the content dropping lower and spilling out of the modal*/ /* not altered for SRA */ 
  right: 8%; /* not altered for SRA */ 
  font-size: 28px; /* not altered for SRA */ 
  font-weight: bold; /* not altered for SRA */ 
}

.close:hover, /* the effect to do when a cursor hovers over close class elements */ 
.close:focus { /* also do the effect when close class elements "have focus" (eg by use of the tab key) */ 
  color: #000; /* not altered for SRA */ 
  text-decoration: none; /* not altered for SRA */ 
  cursor: pointer; /* not altered for SRA */ 
}

.lime{ /*Useful in development for checking where the boundary of an element is visually, if it's overlapped, also if javascript is applying CSS okay*/
	background-color: lime;
}

#cookiePopupContainer { /* not altered for SRA */ 
	position: fixed; /* not altered for SRA */ 
	bottom: 2px; /* not altered for SRA */ 
	width: 10%; /* not altered for SRA */ 
	left: 45%; /* not altered for SRA */ 
} 
/****NO DEFAULT STYLES AFTER THIS COMMENT!, MEDIA QUERIES IN SIZE ORDER (Media queries are usually for overriding styles for specific sizes of screen or to account for device dependant needs, and as such we would not want default styles declared lower than MQ's where they might override a rule. Use mobile first design principles - main css should work for tiny screens, then use media queries to make changes for bigger screen sizes.****/
/* 
@media only screen and (min-width: 500px) { 

}
*/